apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: build-and-deploy
spec:
  workspaces:
  - name: shared-workspace
  params:
  - name: deployment-name
    type: string
    description: name of the deployment to be patched
    default: hello-world

  - name: git-url
    type: string
    description: url of the git repo for the code of deployment
    default: https://github.com/nitishnigam1989/deploy-python-openshift-tutorial.git

  - name: git-revision
    type: string
    description: revision to be used from repo of the code for deployment
    default: master

  - name: IMAGE
    type: string
    description: image to be build from the code
    default: image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/hello-world-nitish

  tasks:
#  - name: fetch-repository
#    taskRef:
#      name: git-clone
#      kind: Task
#    workspaces:
#    - name: output
#      workspace: shared-workspace
#    params:
#    - name: URL
#      value: $(params.git-url)
#    - name: SUBDIRECTORY
#      value: ""
#    - name: DELETE_EXISTING
#      value: "true"
#    - name: REVISION
#      value: $(params.git-revision)
#  - name: build-image
#    taskRef:
#      name: buildah
#      kind: Task
#    params:
#    - name: IMAGE
#      value: $(params.IMAGE)
#    - name: TLS_VERIFY
#      value: 'false'
#    workspaces:
#    - name: source
#      workspace: shared-workspace
#    runAfter:
#    - fetch-repository
  - name: fetch-repository
    taskRef:
      resolver: cluster
      params:
        - name: kind
          value: task
        - name: name
          value: git-clone
        - name: namespace
          value: openshift-pipelines
    workspaces:
    - name: output
      workspace: shared-workspace
    params:
    - name: URL
      value: $(params.git-url)
    - name: SUBDIRECTORY
      value: ""
    - name: DELETE_EXISTING
      value: "true"
    - name: REVISION
      value: $(params.git-revision)
  - name: build-image
    taskRef:
      resolver: cluster
      name: buildah
      params:
        - name: kind
          value: task
        - name: name
          value: buildah
        - name: namespace
          value: openshift-pipelines
      kind: Task
    params:
    - name: IMAGE
      value: $(params.IMAGE)
    - name: TLS_VERIFY
      value: 'false'
    workspaces:
    - name: source
      workspace: shared-workspace
    runAfter:
    - fetch-repository
  - name: apply-manifests
    taskRef:
      name: apply-manifests
    workspaces:
    - name: source
      workspace: shared-workspace
    runAfter:
    - build-image
  - name: update-deployment
    taskRef:
      name: update-deployment
    params:
    - name: deployment
      value: $(params.deployment-name)
    - name: IMAGE
      value: $(params.IMAGE)
    runAfter:
    - apply-manifests